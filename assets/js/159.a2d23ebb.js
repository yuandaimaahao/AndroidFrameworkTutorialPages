(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{582:function(s,a,t){"use strict";t.r(a);var r=t(2),e=Object(r.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("本文基于 AOSP android-10.0.0_r41 版本讲解，内核版本 android-goldfish-4.14-gchips")]),s._v(" "),a("p",[s._v("second_stage 接下来就会开始解析执行 init.rc 文件，在看代码之前我们先了解一下 init.rc 文件的规则")]),s._v(" "),a("h2",{attrs:{id:"_1-init-rc-文件格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-init-rc-文件格式"}},[s._v("#")]),s._v(" 1. init.rc 文件格式")]),s._v(" "),a("p",[s._v("init.rc 文件是以"),a("strong",[s._v("块 （section）"),a("strong",[s._v("为单位的，，一个块可以包含多行。块分成两大类：一类称为")]),s._v("动作（action）")]),s._v("，另一类称为"),a("strong",[s._v("服务（service）")]),s._v("。")]),s._v(" "),a("ul",[a("li",[s._v("动作（action）：以关键字 on 开头，表示在某个时候执行一堆命令")]),s._v(" "),a("li",[s._v("服务（service）：以关键字 service 开头，表示启动某个进程的方式和参数")])]),s._v(" "),a("p",[s._v("块 （section）以关键字 "),a("code",[s._v("on")]),s._v(" 或者 "),a("code",[s._v("service")]),s._v(" 开始，直到下一个 "),a("code",[s._v("on")]),s._v(" 或者 "),a("code",[s._v("service")]),s._v(" 结束，中间所有行都属于这个块 （section）")]),s._v(" "),a("p",[s._v("接着我们看两个示例：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("on init\n    sysclktz "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Backward compatibility.")]),s._v("\n    symlink /system/etc /etc\n    symlink /sys/kernel/debug /d\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ......")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("这个 section 表示在系统启动（init）时，执行下面的一堆命令。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" adbd /sbin/adbd  \n   user adb  \n   group adb \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这里定义了一个服务 adbd，对应的执行文件是 "),a("code",[s._v("/sbin/adbd")]),s._v("，接着定义了服务的两个属性 user 和 group")]),s._v(" "),a("p",[s._v("另外，init.rc 中的注释以 "),a("code",[s._v("#")]),s._v(" 开头。")]),s._v(" "),a("h2",{attrs:{id:"_2-init-rc-脚本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-init-rc-脚本语法"}},[s._v("#")]),s._v(" 2. init.rc 脚本语法")]),s._v(" "),a("h3",{attrs:{id:"_2-1-动作-action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-动作-action"}},[s._v("#")]),s._v(" 2.1 动作（action）")]),s._v(" "),a("p",[s._v("动作（action）的一般格式如下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("on  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("trigger"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 触发条件")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行命令")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以执行多个命令")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在动作（action）里面的，on 后面跟着的字符串是触发器(trigger)，trigger 是一个用于匹配某种事件类型的字符串，当事件发生时，就会执行 trigger 下面的 command")]),s._v(" "),a("p",[s._v("触发器(trigger)有几种格式,最简单的一种是一个单纯的字符串。比如"),a("code",[s._v("on boot")]),s._v(",表示系统启动时。还有一种常见的格式是 "),a("code",[s._v("on property<属性>=<值>")]),s._v("。如果属性值在运行时设成了指定的值，则action 中的命令列表就会执行。")]),s._v(" "),a("p",[s._v("常见的 trigger 有以下几种：")]),s._v(" "),a("ul",[a("li",[s._v("on early-init：在初始化早期阶段触发")]),s._v(" "),a("li",[s._v("on init：在初始化阶段触发")]),s._v(" "),a("li",[s._v("on late-init：在初始化晚期阶段触发")]),s._v(" "),a("li",[s._v("on boot/charger：当系统启动/充电时触发")]),s._v(" "),a("li",[s._v("on property：当属性值满足条件时触发")])]),s._v(" "),a("p",[s._v("command 是 action 的命令列表中的命令，或者是 service 中的 onrestart 选项的参数命令。")]),s._v(" "),a("p",[s._v("命令将在所属事件发生时被一个个地执行")]),s._v(" "),a("p",[s._v("常见命令有以下这些：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("argument"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*：运行指定路径下的程序，并传递参数\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置全局环境参数。此参数被设置后对全部进程都有效\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("interface"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：使指定的网络接口"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"上线"')]),s._v(",相当激活指定的网络接口\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：导入一个额外的 rc 配置文件\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置主机名\nchdir "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("directory"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：改变工作文件夹\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("octal-mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置指定文件的读取权限\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("owner"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置文件所有者和文件关联组\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chroot")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("directory"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置根文件夹\nclass_start "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("serviceclass"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：启动指定类属的全部服务，假设服务已经启动，则不再反复启动\nclass_stop "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("serviceclass"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：停止指定类属的全部服务\ndomainname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置域名\ninsmod "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：安装模块到指定路径\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("owner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("：用指定参数创建一个文件夹\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("device"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mountoption"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*：类似于linux的mount指令\nsetprop "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置属性及相应的值\nsetrlimit "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("resource"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("cur"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("max"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置资源的rlimit\nstart "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：假设指定的服务未启动，则启动它\nstop "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：假设指定的服务当前正在执行。则停止它\nsymlink "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("target"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：创建一个符号链接\nsysclktz "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mins_west_of_gmt"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置系统基准时间\ntrigger "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("event"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：触发另一个时间\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*：往指定的文件写字符串\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h3",{attrs:{id:"_2-2-服务-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-服务-service"}},[s._v("#")]),s._v(" 2.2 服务（service）")]),s._v(" "),a("p",[s._v("服务（service）的一般格式如下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pathname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("argument"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("option"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("option"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("name：表示此服务的名称")]),s._v(" "),a("li",[s._v("pathname：可执行文件对应的路径")]),s._v(" "),a("li",[s._v("argument：执行可执行文件时传入的参数")]),s._v(" "),a("li",[s._v("option：服务的选项")])]),s._v(" "),a("p",[s._v("服务的选项主要有：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("class <name> [ <name>\\* ]：为服务指定 class 名字。 同一个 class 名字的服务会被一起启动或退出, 默认值是 default")])]),s._v(" "),a("li",[a("p",[s._v("console [<console>]：这个选项表明服务需要一个控制台。 第二个参数 console 的意思是可以设置你想要的控制台类型，默认控制台是 /dev/console, /dev 这个前缀通常是被省略的， 比如你要设置控制台 /dev/tty0, 那么只需要设置为console tty0 即可。")])]),s._v(" "),a("li",[a("p",[s._v("critical：表示服务是严格模式。 如果这个服务在4分钟内或者启动完成前退出超过4次，那么设备将重启进入 bootloader 模式")])]),s._v(" "),a("li",[a("p",[s._v("disabled：这个服务不会随着 class 一起启动。只能通过服务名来显式启动。比如 foobar 服务的 class 是 core, 且是 disabled 的，当执行 class_start core 时，foobar 服务是不会被启动的。 foobar 服务只能通过 start foobar 这种方法来启动。")])]),s._v(" "),a("li",[a("p",[s._v("file <path> <type>\n根据文件路径 path 来打开文件，然后把文件描述符 fd 传递给服务进程。type 表示打工文件的方式，只有三种取值 r, w, rw。对于 native 程序来说，可以通过 libcutils 库提供的 android_get_control_file() 函数来获取传递过来的文件描述符。举个例子， logd.rc 部分内容如下:")])])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" logd /system/bin/logd\n    socket logd stream 0666 logd logd\n    socket logdr seqpacket 0666 logd logd\n    socket logdw dgram+passcred 0222 logd logd\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" /proc/kmsg r\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" /dev/kmsg w\n    user logd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("其中通过 file /proc/kmsg r 以只读方式打开了设备文件 /proc/kmsg, 然后在代码中这么获取打开的文件, 见 "),a("code",[s._v("sytem/core/logd/main.cpp")]),s._v(" main 函数：")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" dev_kmsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/dev/kmsg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfdDmesg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("android_get_control_file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dev_kmsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fdDmesg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    fdDmesg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("TEMP_FAILURE_RETRY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dev_kmsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" O_WRONLY "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" O_CLOEXEC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这里可能有点奇怪，为什么要通过 file 这个选项来打开文件，而不直接在代码里面通过 open() 函数来打开呢？我觉得主要是权限问题，还是以 logd 为例子。"),a("code",[s._v("/dev/kmsg")]),s._v(" 的权限是：")]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[s._v("generic_x86_64"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" # ls "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("l "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("kmsg\ncrw"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2023")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("04")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("kmsg\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("只有 root 用户可读写。而 logd 服务是以 user logd 选项来启动的，自然没有权限用 open() 函数来打开 /dev/kmsg 这个设备文件。file 选项则可以通过 init 进程把文件打开，然后把文件描述符传递给子进程， 从而解决了权限的问题。")]),s._v(" "),a("ul",[a("li",[s._v("group <groupname> [ <groupname>\\* ]：")])]),s._v(" "),a("p",[s._v("在启动 Service 前，将 Service 的用户组改为第一个 groupname, 第一个 groupname 是必须有的， 第二个 groupname 可以不设置，用于追加组（通过setgroups）。目前默认的用户组是 root 组。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("oneshot：当服务退出的时候，不自动重启。适用于那些开机只运行一次的服务。")])]),s._v(" "),a("li",[a("p",[s._v("onrestart：在服务重启的时候执行一个命令")])]),s._v(" "),a("li",[a("p",[s._v("seclabel <seclabel>：在启动 Service 前设置指定的 seclabel，默认使用init的安全策略。 主要用于在 rootfs 上启动的 service，比如 ueventd, adbd。 在系统分区上运行的 service 有自己的 SELinux安全策略。")])]),s._v(" "),a("li",[a("p",[s._v("setenv <name> <value>：设置进程的环境变量")])]),s._v(" "),a("li",[a("p",[s._v("socket <name> <type> <perm> [ <user> [ <group> [ <seclabel> ] ] ]")])])]),s._v(" "),a("p",[s._v("创建一个 unix domain socket, 路径为 "),a("code",[s._v("/dev/socket/name")]),s._v(" , 并将 fd 返回给 Service。 type 只能是 "),a("code",[s._v("dgram")]),s._v(", "),a("code",[s._v("stream")]),s._v(" or "),a("code",[s._v("seqpacket")]),s._v("。user 和 group 默认值是 0。 seclabel 是这个 socket 的 SELinux security context, 它的默认值是 service 的 security context 或者基于其可执行文件的 security context。")]),s._v(" "),a("ul",[a("li",[s._v("user <username>\n在启动 Service 前修改进程的所属用户, 默认启动时 user 为 root")])]),s._v(" "),a("p",[s._v("最后，我们看个例子：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" bootanim /system/bin/bootanimation\n    class core  //给服务指定一个类属,这样方便操作多个服务同时启动或停止\n    user graphics //在执行此服务之前先切换用户名\n    group graphics audio\n    disabled  //这个服务不会随着 class 一起启动\n    oneshot  //当此服务退出时不会自动重启\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("本文介绍了 init.rc 的基本结构与常用的一些配置选项，日常工作中遇到不懂的一些配置，可以查阅源码中的文档 "),a("code",[s._v("system/core/init/README.md")])]),s._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://qiushao.net/2020/03/01/Android%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E8%BF%9B%E9%98%B6/init.rc%E4%BB%8B%E7%BB%8D/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Android系统开发进阶-init.rc 详解"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/IYqoIhpG-OP1J6JB9kEvqg",target:"_blank",rel:"noopener noreferrer"}},[s._v("我是init进程"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/cb73a88b0eed",target:"_blank",rel:"noopener noreferrer"}},[s._v("Android系统启动——3init.rc解析"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/a4c17f0110d0",target:"_blank",rel:"noopener noreferrer"}},[s._v("Android系统启动之init.rc文件解析过程"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);